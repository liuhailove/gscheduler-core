### web
server.port=8082
server.forward-headers-strategy=native
server.name=go-scheduler
server.registry.address=
server.registry.username=
server.registry.password=
server.servlet.context-path=/xxl-job-admin
### actuator
#management.server.servlet.context-path=/actuator
management.server.port=17000
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.prometheus=metrics
kms.bootstrap.enabled=false
management.metrics.tags.scheduler=${server.name}
management.metrics.tags.scheduleenv=${spring.profiles.active}
spring.profiles.active=dev
spring.cache.type=ehcache
spring.cache.ehcache.config=classpath:/ehcache.xml
### resources
spring.mvc.servlet.load-on-startup=0
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/
### freemarker
spring.freemarker.templateLoaderPath=classpath:/templates/
spring.freemarker.suffix=.html
spring.freemarker.charset=UTF-8
spring.freemarker.cache=true
spring.freemarker.request-context-attribute=request
spring.freemarker.settings.number_format=0.##########
### mybatis
mybatis.mapper-locations=classpath:/mybatis-mapper/*Mapper.xml
### google oauth2
spring.security.oauth2.client.registration.google.client-id=1059309822194-1buklouvrpk85ruc13as81v229698hcm.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile,address,phone
spring.security.oauth2.resource.prefer-token-info=false
spring.session.store-type=jdbc
server.servlet.session.timeout=3600
spring.shardingsphere.datasource.names=xxl-job,xxl-job-slave
## ---------------master-------------------
spring.shardingsphere.datasource.xxl-job.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.xxl-job.driver-class-name=com.mysql.cj.jdbc.Driver
# show sql
spring.shardingsphere.props.sql-show=false
## Jdbc-Url
spring.shardingsphere.datasource.xxl-job.jdbc-url=jdbc:mysql://localhost:3306/credit_gs_scheduler_local_db?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.xxl-job.username=root
spring.shardingsphere.datasource.xxl-job.password=
spring.shardingsphere.datasource.xxl-job.minimum-idle=10
spring.shardingsphere.datasource.xxl-job.maximum-pool-size=30
spring.shardingsphere.datasource.xxl-job.auto-commit=true
spring.shardingsphere.datasource.xxl-job.idle-timeout=30000
spring.shardingsphere.datasource.xxl-job.pool-name=HikariCP
spring.shardingsphere.datasource.xxl-job.max-lifetime=900000
spring.shardingsphere.datasource.xxl-job.connection-timeout=10000
spring.shardingsphere.datasource.xxl-job.connection-test-query=SELECT 1
spring.shardingsphere.datasource.xxl-job.validation-timeout=1000
spring.shardingsphere.datasource.xxl-job.lock-detect.enable=true
spring.shardingsphere.datasource.xxl-job.lock-detect.interval-milliseconds=5000
spring.shardingsphere.datasource.xxl-job.lock-detect.timeout-milliseconds=10000
## ---------------slave-------------------
spring.shardingsphere.datasource.xxl-job-slave.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.xxl-job-slave.driver-class-name=com.mysql.cj.jdbc.Driver
# Jdbc-Url
spring.shardingsphere.datasource.xxl-job-slave.jdbc-url=jdbc:mysql://127.0.0.1:3306/credit_gs_scheduler_local_db?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.xxl-job-slave.username=root
spring.shardingsphere.datasource.xxl-job-slave.password=
spring.shardingsphere.datasource.xxl-job-slave.minimum-idle=10
spring.shardingsphere.datasource.xxl-job-slave.maximum-pool-size=30
spring.shardingsphere.datasource.xxl-job-slave.auto-commit=true
spring.shardingsphere.datasource.xxl-job-slave.idle-timeout=30000
spring.shardingsphere.datasource.xxl-job-slave.pool-name=HikariCP
spring.shardingsphere.datasource.xxl-job-slave.max-lifetime=900000
spring.shardingsphere.datasource.xxl-job-slave.connection-timeout=10000
spring.shardingsphere.datasource.xxl-job-slave.connection-test-query=SELECT 1
spring.shardingsphere.datasource.xxl-job-slave.validation-timeout=1000
spring.shardingsphere.rules.readwrite-splitting.data-sources.xxl-job.write-data-source-name=xxl-job
spring.shardingsphere.rules.readwrite-splitting.data-sources.xxl-job.read-data-source-names=xxl-job-slave
spring.shardingsphere.rules.readwrite-splitting.data-sources.xxl-job.load-balancer-name=read-random
spring.shardingsphere.rules.readwrite-splitting.load-balancers.read-random.type=ROUND_ROBIN
spring.shardingsphere.rules.sharding.tables.gs_job_group.actual-data-nodes=xxl-job.gs_job_group
spring.shardingsphere.rules.sharding.tables.gs_job_info.actual-data-nodes=xxl-job.gs_job_info
spring.shardingsphere.rules.sharding.tables.gs_job_lock.actual-data-nodes=xxl-job.gs_job_lock
spring.shardingsphere.rules.sharding.tables.gs_job_compensate.actual-data-nodes=xxl-job.gs_job_compensate
## -----------gs_job_log------------------
spring.shardingsphere.rules.sharding.tables.gs_job_log.actual-data-nodes=xxl-job.gs_job_log_$->{1..2}
spring.shardingsphere.rules.sharding.tables.gs_job_log.databaseStrategy.standard.sharding-column=job_group
spring.shardingsphere.rules.sharding.tables.gs_job_log.databaseStrategy.standard.sharding-algorithm-name=datasource-inline
spring.shardingsphere.rules.sharding.tables.gs_job_log.table-strategy.standard.sharding-column=job_group
spring.shardingsphere.rules.sharding.tables.gs_job_log.table-strategy.standard.sharding-algorithm-name=job-log-table-inline
spring.shardingsphere.rules.sharding.tables.gs_job_log.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.gs_job_log.key-generate-strategy.key-generator-name=snowflake
## -----------gs_job_metric start-----------------
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.actual-data-nodes=xxl-job.gs_log_metrics_$->{0..99}
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.databaseStrategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.databaseStrategy.standard.sharding-algorithm-name=datasource-inline
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.table-strategy.standard.sharding-column=job_id
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.table-strategy.standard.sharding-algorithm-name=job-log-metric-table-inline
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.gs_log_metrics.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.sharding-algorithms.job-log-metric-table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.job-log-metric-table-inline.props.algorithm-expression=gs_log_metrics_$->{job_id % 100}
##-----------gs_job_metric end -----------------
spring.shardingsphere.rules.sharding.tables.gs_job_compensate.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.gs_job_compensate.key-generate-strategy.key-generator-name=snowflake
## 配置分库分表算法
spring.shardingsphere.rules.sharding.sharding-algorithms.datasource-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.datasource-inline.props.algorithm-expression=xxl-job
spring.shardingsphere.rules.sharding.sharding-algorithms.job-log-table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.job-log-table-inline.props.algorithm-expression=gs_job_log_$->{ job_group>0?(job_group % 2 +1):1}
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.tables.gs_job_log_report.actual-data-nodes=xxl-job.gs_job_log_report
spring.shardingsphere.rules.sharding.tables.gs_job_logglue.actual-data-nodes=xxl-job.gs_job_logglue
spring.shardingsphere.rules.sharding.tables.gs_job_registry.actual-data-nodes=xxl-job.gs_job_registry
spring.shardingsphere.rules.sharding.tables.gs_job_user.actual-data-nodes=xxl-job.gs_job_user
spring.shardingsphere.rules.sharding.tables.gs_job_info_history.actual-data-nodes=xxl-job.gs_job_info_history
#spring.shardingsphere.rules.sharding.tables.SPRING_SESSION.actual-data-nodes=xxl-job.SPRING_SESSION
#spring.shardingsphere.rules.sharding.tables.SPRING_SESSION_ATTRIBUTES.actual-data-nodes=xxl-job.SPRING_SESSION_ATTRIBUTES
spring.shardingsphere.rules.sharding.tables.gs_job_menu.actual-data-nodes=xxl-job.gs_job_menu
spring.shardingsphere.rules.sharding.tables.gs_job_role.actual-data-nodes=xxl-job.gs_job_role
spring.shardingsphere.rules.sharding.tables.gs_job_log_tag.actual-data-nodes=xxl-job.gs_job_log_tag
spring.shardingsphere.rules.sharding.tables.gs_job_auth_user.actual-data-nodes=xxl-job.gs_job_auth_user
spring.shardingsphere.rules.sharding.tables.gs_job_user_group.actual-data-nodes=xxl-job.gs_job_user_group
spring.shardingsphere.rules.sharding.tables.gs_job_platform.actual-data-nodes=xxl-job.gs_job_platform
spring.shardingsphere.rules.sharding.tables.gs_open_api.actual-data-nodes=xxl-job.gs_open_api
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=default-database-strategy-inline
# 数据库 URL 连接
#
#### datasource-pool
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.hikari.minimum-idle=10
#spring.datasource.hikari.maximum-pool-size=30
#spring.datasource.hikari.auto-commit=true
#spring.datasource.hikari.idle-timeout=30000
#spring.datasource.hikari.pool-name=HikariCP
#spring.datasource.hikari.max-lifetime=900000
#spring.datasource.hikari.connection-timeout=10000
#spring.datasource.hikari.connection-test-query=SELECT 1
#spring.datasource.hikari.validation-timeout=1000
### go-scheduler,email
spring.mail.host=
spring.mail.port=587
spring.mail.username=
spring.mail.from=
#spring.mail.host=smtp.shopeemobile.com
#spring.mail.port=587
#spring.mail.username=financialproducts.fastescrow@shopee.com
#spring.mail.from=financialproducts.fastescrow@shopee.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.properties.mail.smtp.starttls.required=false
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
### xxl-job, access token
xxl.job.accessToken=
### xxl-job, i18n (default is zh_CN, and you can choose "zh_CN", "zh_TC" and "en")
xxl.job.i18n=zh_CN
## xxl-job, triggerpool max size
xxl.job.triggerpool.fast.max=200
xxl.job.triggerpool.slow.max=100
### xxl-job, log retention days
xxl.job.logretentiondays=30
xxl.job.proxyAddr=
logging.level.com.xxl.job.admin.dao=info
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
go.scheduler.system.alarm.seatalk=https://openapi.seatalk.io/webhook/group/caQyoLstQgOJKJbhacsxPA
go.scheduler.use.etcd=false
swagger.basic.enable=true
swagger.basic.username=gs_scheduler
swagger.basic.password=admin
swagger.production=false
swagger2.enabled=true
management.health.mail.enabled=false
spring.profiles.cug.es=


