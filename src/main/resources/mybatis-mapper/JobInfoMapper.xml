<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tc.gschedulercore.dao.JobInfoDao">

    <resultMap id="JobInfo" type="com.tc.gschedulercore.core.model.JobInfo">
        <result column="id" property="id"/>

        <result column="job_group" property="jobGroup"/>
        <result column="job_desc" property="jobDesc"/>

        <result column="add_time" property="addTime"/>
        <result column="update_time" property="updateTime"/>

        <result column="author" property="author"/>
        <result column="alarm_email" property="alarmEmail"/>

        <result column="schedule_type" property="scheduleType"/>
        <result column="schedule_conf" property="scheduleConf"/>
        <result column="misfire_strategy" property="misfireStrategy"/>

        <result column="executor_route_strategy" property="executorRouteStrategy"/>
        <result column="executor_handler" property="executorHandler"/>
        <result column="executor_param" property="executorParam"/>
        <result column="executor_block_strategy" property="executorBlockStrategy"/>
        <result column="executor_timeout" property="executorTimeout"/>
        <result column="executor_fail_retry_count" property="executorFailRetryCount"/>

        <result column="glue_type" property="glueType"/>
        <result column="glue_source" property="glueSource"/>
        <result column="glue_remark" property="glueRemark"/>
        <result column="glue_updatetime" property="glueUpdatetime"/>

        <result column="child_jobid" property="childJobId"/>

        <result column="trigger_status" property="triggerStatus"/>
        <result column="trigger_last_time" property="triggerLastTime"/>
        <result column="trigger_next_time" property="triggerNextTime"/>
        <result column="alarm_seatalk" property="alarmSeatalk"/>
        <result column="job_name" property="jobName"/>
        <result column="app_name" property="appName"/>
        <result column="app_name" property="appName"/>
        <result column="retry_type" property="retryType"/>
        <result column="retry_conf" property="retryConf"/>
        <result column="executor_threshold" property="executorThreshold"/>
        <result column="sharding_type" property="shardingType"/>
        <result column="sharding_num" property="shardingNum"/>
        <result column="param_from_parent" property="paramFromParent"/>
        <result column="result_check" property="resultCheck"/>
        <result column="final_failed_send_alarm" property="finalFailedSendAlarm"/>
        <result column="update_by" property="updateBy"/>
        <result column="begin_after_parent" property="beginAfterParent"/>
        <result column="parent_job_id" property="parentJobId"/>
        <result column="dispatch_threshold" property="dispatchThreshold"/>
        <result column="log_retention_days" property="logRetentionDays"/>
        <result column="start_executor_tolerance_threshold_in_min" property="startExecutorToleranceThresholdInMin"/>
        <result column="alarm_silence" property="alarmSilence"/>
        <result column="alarm_silence_to" property="alarmSilenceTo"/>
        <result column="router_flag" property="routerFlag"/>
        <result column="voice_alarm_tels" property="voiceAlarmTels"/>
        <result column="additional_params" property="additionalParams"/>
        <result column="task_running_alarm" property="taskRunningAlarm"/>
        <result column="is_delay" property="delay"/>
        <result column="delay_in_ms" property="delayInMs"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.id,
		t.job_group,
        t.job_name,
        t.app_name,
		t.job_desc,
		t.add_time,
		t.update_time,
		t.author,
		t.alarm_email,
		t.alarm_seatalk,
		t.schedule_type,
		t.schedule_conf,
		t.misfire_strategy,
		t.executor_route_strategy,
		t.executor_handler,
		t.executor_param,
		t.executor_block_strategy,
		t.executor_timeout,
        t.executor_threshold,
		t.executor_fail_retry_count,
		t.glue_type,
		t.glue_source,
		t.glue_remark,
		t.glue_updatetime,
		t.child_jobid,
		t.trigger_status,
		t.trigger_last_time,
		t.trigger_next_time,
        t.retry_type,
        t.retry_conf,
        t.sharding_type,
        t.sharding_num,
        t.param_from_parent,
        t.result_check,
        t.final_failed_send_alarm,
        t.update_by,
        t.begin_after_parent,
        t.parent_job_id,
        t.dispatch_threshold,
        t.log_retention_days,
        t.start_executor_tolerance_threshold_in_min,
        t.alarm_silence,
        t.alarm_silence_to,
        t.router_flag,
        t.voice_alarm_tels,
        t.additional_params,
        t.task_running_alarm,
        t.is_delay,
        t.delay_in_ms
    </sql>

    <select id="pageList" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroups!=null and jobGroups.size()>0">
                AND t.job_group IN
                <foreach collection="jobGroups" close=")" item="jobGroup" open="(" separator=",">
                    ${jobGroup}
                </foreach>
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
            </if>
            <if test="jobName != null and jobName != ''">
                AND t.job_name like CONCAT(CONCAT('%', #{jobName}), '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
            <if test="author != null and author != ''">
                AND t.author like CONCAT(CONCAT('%', #{author}), '%')
            </if>
        </trim>
        ORDER BY id DESC
        LIMIT #{offset}, #{pagesize}
    </select>

    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM gs_job_info AS t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroups!=null and jobGroups.size()>0">
                AND t.job_group IN
                <foreach collection="jobGroups" close=")" item="jobGroup" open="(" separator=",">
                    ${jobGroup}
                </foreach>
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
            </if>
            <if test="jobName != null and jobName != ''">
                AND t.job_name like CONCAT(CONCAT('%', #{jobName}), '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
            <if test="author != null and author != ''">
                AND t.author like CONCAT(CONCAT('%', #{author}), '%')
            </if>
        </trim>
    </select>

    <select id="triggerDelayList" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE
        t.job_group IN
        <foreach collection="jobGroups" close=")" item="jobGroup" open="(" separator=",">
            ${jobGroup}
        </foreach>
        AND t.trigger_next_time <![CDATA[ > ]]>  0
        AND t.schedule_type <![CDATA[ <> ]]> 'NONE'
        AND t.parent_job_id is null
        ORDER BY id DESC
        LIMIT #{offset}, #{pagesize}
    </select>

    <select id="triggerDelayListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM gs_job_info AS t
        WHERE
        t.job_group IN
        <foreach collection="jobGroups" close=")" item="jobGroup" open="(" separator=",">
            ${jobGroup}
        </foreach>
        AND t.trigger_next_time <![CDATA[ > ]]> 0
        AND t.schedule_type <![CDATA[ <> ]]> 'NONE'
        AND t.parent_job_id is null
    </select>

    <insert id="save" parameterType="com.tc.gschedulercore.core.model.JobInfo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO gs_job_info (job_group,
                                 job_name,
                                 app_name,
                                 job_desc,
                                 add_time,
                                 update_time,
                                 author,
                                 alarm_email,
                                 alarm_seatalk,
                                 schedule_type,
                                 schedule_conf,
                                 misfire_strategy,
                                 executor_route_strategy,
                                 executor_handler,
                                 executor_param,
                                 executor_block_strategy,
                                 executor_timeout,
                                 executor_threshold,
                                 executor_fail_retry_count,
                                 glue_type,
                                 glue_source,
                                 glue_remark,
                                 glue_updatetime,
                                 child_jobid,
                                 trigger_status,
                                 trigger_last_time,
                                 trigger_next_time,
                                 retry_type,
                                 retry_conf,
                                 sharding_type,
                                 sharding_num,
                                 param_from_parent,
                                 result_check,
                                 final_failed_send_alarm,
                                 update_by,
                                 begin_after_parent,
                                 parent_job_id,
                                 dispatch_threshold,
                                 log_retention_days,
                                 start_executor_tolerance_threshold_in_min,
                                 alarm_silence,
                                 alarm_silence_to,
                                 router_flag,
                                 voice_alarm_tels,
                                 additional_params,
                                 task_running_alarm)
        VALUES (#{jobGroup},
                #{jobName},
                #{appName},
                #{jobDesc},
                #{addTime},
                #{updateTime},
                #{author},
                #{alarmEmail},
                #{alarmSeatalk},
                #{scheduleType},
                #{scheduleConf},
                #{misfireStrategy},
                #{executorRouteStrategy},
                #{executorHandler},
                #{executorParam},
                #{executorBlockStrategy},
                #{executorTimeout},
                #{executorThreshold},
                #{executorFailRetryCount},
                #{glueType},
                #{glueSource},
                #{glueRemark},
                #{glueUpdatetime},
                #{childJobId},
                #{triggerStatus},
                #{triggerLastTime},
                #{triggerNextTime},
                #{retryType},
                #{retryConf},
                #{shardingType},
                #{shardingNum},
                #{paramFromParent},
                #{resultCheck},
                #{finalFailedSendAlarm},
                #{updateBy},
                #{beginAfterParent},
                #{parentJobId},
                #{dispatchThreshold},
                #{logRetentionDays},
                #{startExecutorToleranceThresholdInMin},
                #{alarmSilence},
                #{alarmSilenceTo},
                #{routerFlag},
                #{voiceAlarmTels},
                #{additionalParams},
                #{taskRunningAlarm})
    </insert>

    <select id="loadById" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.id = #{id}
    </select>

    <select id="loadCachedJobInfoById" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.id = #{id}
    </select>

    <select id="queryBy" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.job_name = #{jobName}
        and t.app_name = #{appName}
    </select>

    <select id="loadByIdes" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.id IN
        <foreach collection="ides" close=")" item="id" open="(" separator=",">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="com.tc.gschedulercore.core.model.JobInfo">
        UPDATE gs_job_info
        SET job_group                                 = #{jobGroup},
            job_desc                                  = #{jobDesc},
            job_name                                  = #{jobName},
            app_name                                  = #{appName},
            update_time                               = #{updateTime},
            author                                    = #{author},
            alarm_email                               = #{alarmEmail},
            alarm_seatalk                             =#{alarmSeatalk},
            schedule_type                             = #{scheduleType},
            schedule_conf                             = #{scheduleConf},
            misfire_strategy                          = #{misfireStrategy},
            executor_route_strategy                   = #{executorRouteStrategy},
            executor_handler                          = #{executorHandler},
            executor_param                            = #{executorParam},
            executor_block_strategy                   = #{executorBlockStrategy},
            executor_timeout                          = ${executorTimeout},
            executor_threshold                        = #{executorThreshold},
            executor_fail_retry_count                 = ${executorFailRetryCount},
            glue_type                                 = #{glueType},
            glue_source                               = #{glueSource},
            glue_remark                               = #{glueRemark},
            glue_updatetime                           = #{glueUpdatetime},
            child_jobid                               = #{childJobId},
            trigger_status                            = #{triggerStatus},
            trigger_last_time                         = #{triggerLastTime},
            trigger_next_time                         = #{triggerNextTime},
            retry_type                                = #{retryType},
            retry_conf                                = #{retryConf},
            sharding_type                             = #{shardingType},
            sharding_num                              = #{shardingNum},
            param_from_parent                         = #{paramFromParent},
            result_check                              = #{resultCheck},
            final_failed_send_alarm                   = #{finalFailedSendAlarm},
            update_by                                 = #{updateBy},
            begin_after_parent                        = #{beginAfterParent},
            parent_job_id                             = #{parentJobId},
            dispatch_threshold                        = #{dispatchThreshold},
            log_retention_days                        = #{logRetentionDays},
            start_executor_tolerance_threshold_in_min = #{startExecutorToleranceThresholdInMin},
            alarm_silence                             = #{alarmSilence},
            alarm_silence_to                          = #{alarmSilenceTo},
            voice_alarm_tels                          = #{voiceAlarmTels},
            additional_params                         = #{additionalParams},
            task_running_alarm                        = #{taskRunningAlarm},
            is_delay                                  = #{delay},
            delay_in_ms                               = #{delayInMs}
        WHERE id = #{id}
    </update>

    <update id="updateAlarmSilenceTo" parameterType="java.util.HashMap">
        UPDATE gs_job_info
        SET alarm_silence_to = #{alarmSilenceTo}
        WHERE id = #{jobId}
    </update>

    <delete id="delete" parameterType="java.util.HashMap">
        DELETE
        FROM gs_job_info
        WHERE id = #{id}
    </delete>

    <select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.job_group = #{jobGroup}
    </select>

    <select id="findAllCount" resultType="int">
        SELECT count(1)
        FROM gs_job_info
    </select>

    <select id="findAllCountByGroups" resultType="int">
        SELECT count(1)
        FROM gs_job_info AS t
        <if test="jobGroups!=null and jobGroups.size()>0 ">
            WHERE t.job_group IN
            <foreach collection="jobGroups" close=")" item="id" open="(" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="exist" resultType="int">
        SELECT count(*)
        FROM gs_job_info
        WHERE job_name = #{jobName}
          and app_name = #{appName}
    </select>


    <select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.trigger_status = 1
        and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
        ORDER BY id ASC
        LIMIT #{pagesize}
    </select>

    <update id="scheduleUpdate" parameterType="com.tc.gschedulercore.core.model.JobInfo">
        UPDATE gs_job_info
        SET trigger_last_time = #{triggerLastTime},
            trigger_next_time = #{triggerNextTime},
            trigger_status    = #{triggerStatus}
        WHERE id = #{id}
    </update>

    <update id="updateSeatalk">
        UPDATE gs_job_info
        SET alarm_seatalk = #{alarmSeatalk}
        WHERE job_group = #{jobGroupId}
    </update>

    <select id="triggerStatusCount" resultType="java.util.HashMap">
        select SUM(1)                            as totalSum,
               SUM(if(trigger_status = 1, 1, 0)) as runningSum,
               SUM(if(trigger_status = 0, 1, 0)) as stoppedSum
        from gs_job_info t
        WHERE job_group = #{jobGroup}
    </select>

    <select id="triggerStatusCountByGroups" resultType="java.util.HashMap">
        select SUM(1) as totalSum,
        SUM(if(trigger_status = 1, 1, 0)) as runningSum,
        SUM(if(trigger_status = 0, 1, 0)) as stoppedSum
        from gs_job_info t
        <if test="jobGroups!=null and jobGroups.size()>0 ">
            WHERE t.job_group IN
            <foreach collection="jobGroups" close=")" item="id" open="(" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="existParamFromParent" resultType="java.lang.Boolean">
        SELECT count(*)
        FROM gs_job_info t
        WHERE t.id IN
        <foreach collection="jobIds" close=")" item="id" open="(" separator=",">
            #{id}
        </foreach>
        AND t.param_from_parent=1
    </select>

    <select id="getJobsByParent" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE find_in_set(#{parentJob,jdbcType=VARCHAR},parent_job_id)
    </select>

    <select id="getJobsByChild" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE find_in_set(#{childJob,jdbcType=VARCHAR},child_jobid)
    </select>
    <select id="getJobsBeginAfterParent" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE t.parent_job_id is not null AND
        t.parent_job_id <![CDATA[ <> ]]> '' AND
        t.begin_after_parent = 1
    </select>

    <select id="findAllRetentionGreatThanZero" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE log_retention_days <![CDATA[ > ]]> 0
    </select>

    <select id="findAllRetentionEqualZero" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gs_job_info AS t
        WHERE log_retention_days <![CDATA[ = ]]> 0
    </select>

    <select id="loadGroupBy" resultType="int">
        SELECT job_group
        FROM gs_job_info t
        WHERE t.id = #{jobId}
    </select>

    <update id="triggerNextTime" parameterType="java.util.HashMap">
        UPDATE gs_job_info
        SET trigger_next_time = #{triggerNextTime}
        WHERE id = #{id}
    </update>

    <update id="updateRouterFlag" parameterType="com.tc.gschedulercore.core.model.JobInfo">
        UPDATE gs_job_info
        SET router_flag = #{routerFlag}
        WHERE id = #{id}
    </update>
</mapper>